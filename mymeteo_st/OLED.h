#ifndef OLED
#define OLED

#include "SSD1306Wire.h"

class Number
{
    private:

        static inline const int one[131][2] = 
        {{15,2}, {16, 2}, {17, 2}, 
        {14, 3}, {15, 3}, {16, 3}, {17, 3}, 
        {13, 4}, {14, 4}, {15, 4}, {16, 4}, {17, 4}, 
        {12, 5}, {13, 5}, {14, 5}, {15, 5}, {16, 5}, {17, 5}, 
        {11, 6}, {12, 6}, {13, 6}, {14, 6}, {15, 6}, {16, 6}, {17, 6}, 
        {10, 7}, {11, 7}, {12, 7}, {13, 7}, {14, 7}, {15, 7}, {16, 7}, {17, 7},
        {10, 8}, {11, 8}, {12, 8}, {13, 8}, {14, 8}, {15, 8}, {16, 8}, {17, 8}, 
        {13, 9}, {14, 9}, {15, 9}, {16, 9}, {17, 9}, 
        {13, 10}, {14, 10}, {15, 10}, {16, 10}, {17, 10}, 
        {13, 11}, {14, 11}, {15, 11}, {16, 11}, {17, 11},
        {13, 12}, {14, 12}, {15, 12}, {16, 12}, {17, 12},
        {13, 13}, {14, 13}, {15, 13}, {16, 13}, {17, 13}, 
        {13, 14}, {14, 14}, {15, 14}, {16, 14}, {17, 14}, 
        {13, 15}, {14, 15}, {15, 15}, {16, 15}, {17, 15}, 
        {13, 16}, {14, 16}, {15, 16}, {16, 16}, {17, 16}, 
        {13, 17}, {14, 17}, {15, 17}, {16, 17}, {17, 17}, 
        {13, 18}, {14, 18}, {15, 18}, {16, 18}, {17, 18}, 
        {13, 19}, {14, 19}, {15, 19}, {16, 19}, {17, 19}, 
        {13, 20}, {14, 20}, {15, 20}, {16, 20}, {17, 20}, 
        {13, 21}, {14, 21}, {15, 21}, {16, 21}, {17, 21}, 
        {13, 22}, {14, 22}, {15, 22}, {16, 22}, {17, 22}, 
        {13, 23}, {14, 23}, {15, 23}, {16, 23}, {17, 23}, 
        {13, 24}, {14, 24}, {15, 24}, {16, 24}, {17, 24}, 
        {13, 25}, {14, 25}, {15, 25}, {16, 25}, {17, 25}, 
        {13, 26}, {14, 26}, {15, 26}, {16, 26}, {17, 26}};

        static inline const int two[][2] = 
        {
            {11, 2}, {12, 2}, {13, 2}, {14, 2}, {15, 2}, {16, 2},
	    {9, 3}, {10, 3}, {11, 3}, {14, 3}, {15, 3}, {16, 3}, {17, 3}, {18, 3},
	    {8, 4}, {9, 4}, {10, 4}, {11, 4}, {12, 4}, {13, 4}, {14, 4}, {15, 4}, {16, 4}, {17, 4}, {18, 4}, {19, 4}, {20, 4}, {21, 4}, 
            {7, 5}, {8, 5}, {9, 5}, {10, 5}, {11, 5}, {18, 5}, {19, 5}, {20, 5}, {21, 5},
            {7, 6}, {8, 6}, {9, 6}, {10, 6}, {19, 6}, {20, 6}, {21, 6}, {22, 6},
            {19, 7}, {20, 7}, {21, 7}, {22, 7},
            {19, 8}, {20, 8}, {21, 8}, {22, 8},
            {18, 9}, {19, 9}, {20, 9}, {21, 9}, {22, 9},
            {17, 10}, {18, 10}, {19, 10}, {20, 10}, {21, 10}, 
            {16, 11}, {17, 11}, {18, 11}, {19, 11}, {20, 11},
            {15, 12}, {16, 12}, {17, 12}, {18, 12}, {19, 12}, 
	    {14, 13}, {15, 13}, {16, 13}, {17, 13}, {18, 13},
            {13, 14}, {14, 14}, {15, 14}, {16, 14}, {17, 14}, 
            {12, 15}, {13, 15}, {14, 15}, {15, 15}, {16, 15},
	    {11, 16}, {12, 16}, {13, 16}, {14, 16}, {15, 16}, 
	    {10, 17}, {11, 17}, {12, 17}, {13, 17}, {14, 17},  
            {9, 18},  {10, 18}, {11, 18}, {12, 18}, {13, 18}, 
	    {8, 19},  {9, 19},  {10, 19}, {11, 19}, {12, 19},  
	    {7, 20}, {8, 20},  {9, 20},  {10, 20}, {11, 20}, 
            {7, 21}, {8, 21},  {9, 21},  {10, 21}, 
            {7, 22}, {8, 22},  {9, 22},  {10, 22}, 
            {7, 23}, {8, 23},  {9, 23},  {10, 23}, {11, 23}, {19, 23}, {20, 23}, {21, 23}, {22, 23},
            {7, 24}, {8, 24},  {9, 24},  {10, 24}, {11, 24}, {12, 24}, {13, 24}, {14, 24}, {15, 24}, {16, 24}, {17, 24}, {18, 24}, {19, 24}, {20, 24}, {21, 24}, {22, 24},
            {8, 25},  {9, 25},  {10, 25}, {11, 25}, {12, 25}, {13, 25}, {14, 25}, {15, 25}, {16, 25}, {17, 25}, {18, 25}, {19, 25}, {20, 25}, {21, 25}, {22, 25},
            {9, 26},  {10, 26}, {11, 26}, {12, 26}, {13, 26}, {14, 26}, {15, 26}, {16, 26}, {17, 26}, {18, 26}, {19, 26}, {20, 26}, {21, 26}
	};

        int offset_;
        int val_;
        SSD1306Wire& tmp_wire_;
    public:
        Number(int, int, SSD1306Wire&);
        void Drawing(const int [][2] , int) const;
        void SetDisplay() const;
};

void Number::SetDisplay() const
{
    if (1 == this->val_) {this->Drawing(Number::one, 131);}
    if (2 == this->val_) {this->Drawing(Number::two, 171);}
};

void Number::Drawing(const int pt [][2], int size) const
{
    for (int i = 0; i < size; ++i) {
        tmp_wire_.setPixel(*(*(pt + i)) + this->offset_, *(*(pt + i) + 1));
    }
};

Number::Number(int offset, int val, SSD1306Wire& tmp_wire) : offset_(offset), val_(val), tmp_wire_(tmp_wire) {};

#endif
